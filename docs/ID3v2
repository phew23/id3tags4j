/*
 * This file is part of id3tags4j, an ID3 tag library for Java.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */


                                                        phew <phew@pussykill.in>
                                                                      28.02.2012
                           


Abstract

    This document was created for a better understanding of ID3v2 tags and to 
    illustrate the similiarities and differences within different subversions of
    those. The intension of this document is to simplify implementation of the 
    most common ID3v2 tag protocols. Much of the provided information is 
    originally from <http://www.id3.org/> and either rewritten or visualized 
    with the purpose of better readability and understanding.



1.          Conventions in this document
2.          General ID3v2 tag structure
3.          ID3v2 tag header
  3.1.      ID3v2 tag header flag byte
  3.2.      ID3v2 tag extended header
4.          ID3v2 tag body
5.          ID3v2 frame
  5.1.      ID3v2 frame header
      5.1.1 ID3v2 frame header flag bytes
  5.2.      ID3v2 frame body





1.  Conventions in this document

    This document will use the same example indicators and conventions as the 
    informal id3v2 2.0 standard <http://www.id3.org/id3v2-00>, described by M. 
    Nilsson as follows:

        In the examples, text within "" is a text string exactly as it appears 
        in a file. Numbers preceded with $ are hexadecimal and numbers preceded 
        with % are binary. $xx is used to indicate a byte with unknown content. 
        %x is used to indicate a bit with unknown content. The most significant 
        bit (MSB) of a byte is called 'bit 7' and the least significant bit 
        (LSB) is called 'bit 0'.




2.      General ID3v2 structures
                                                                                
+-----------------------------------------------------------------------------+
|                                  ID3v2 tag                                  |
+------------+--------------------------+--------------------------+----------+
             |                          |                          |           
           v2.0                       v3.0                       v4.0          
             |                          |                          |           
             |                          |                          |           
 +-------[Header]------+    +-------[Header]------+    +-------[Header]------+ 
 |   10 bytes length   |    | 10 bytes length     |    | 10 bytes length     | 
 +---------------------+    +---------------------+    +---------------------+ 
                                                                               
                            +--[Extended Header]--+    +--[Extended Header]--+ 
                            | variable length     |    | variable length     | 
                            | optional            |    | optional            | 
                            +---------------------+    +---------------------+ 
                                                                               
 +------[Frames]-------+    +------[Frames]-------+    +------[Frames]-------+ 
 | variable length     |    | variable length     |    | variable length     | 
 +---------------------+    +---------------------+    +---------------------+ 
                                                                               
 +------[Padding]------+    +------[Padding]------+    +------[Padding]------+ 
 | variable length     |    | variable length     |    | variable length     | 
 | optional            |    | optional            |    | optional            | 
 +---------------------+    +---------------------+    +---------------------+ 
                                                                               
                                                       +-------[Footer]------+ 
                                                       | 10 bytes length     | 
                                                       | optional            | 
                                                       +---------------------+ 





3.      ID3v2 tag header

    The ID3v2 tag header should be the first information in the file, its 10 
    bytes as illustrated below:

 +---------------------------------------------------------------------------+
 |                              ID3v2 tag header                             |
 +---------------------+-----------------+-----------------+-----------------+
 |       ID3v2 version |      v2.0       |      v3.0       |       v4.0      |
 +---------------------+--------+--------+--------+--------+---------+-------+
                                |                 |                  |
 +---------------------+--------+--------+--------+--------+---------+-------+
 | ID3/file identifier | "ID3"           | "ID3"           | "ID3"           |
 +---------------------+-----------------+-----------------+-----------------+
 |             version | $02 00          | $03 00          | $04 00          |
 +---------------------+-----------------+-----------------+-----------------+ 
 |                flag | %ab000000       | %abc00000       | %abcd0000       |
 +---------------------+-----------------+-----------------+-----------------+
 |                size | 4 * %0xxxxxxx   | 4 * %0xxxxxxx   | 4 * %0xxxxxxx   |
 +---------------------+-----------------+-----------------+-----------------+
                       | 10 bytes total  | 10 bytes total  | 10 bytes total  |
                       +-----------------+-----------------+-----------------+

    For details on the flag byte's bits (%abcd0000, bit a, b, c and d) see next
    section.


     
3.1     ID3v2 tag header flag byte

    The table below illustrates which flags are supported in which ID3v2 tag
    version.
 
 +-------------------+------------+------------+------------+
 |     ID3v2 version | v2.0 / 200 | v3.0 / 230 | v4.0 / 240 |
 +-------------------+------+-----+------+-----+------+-----+
                            |            |            | 
                     +------+-----+------+-----+------+-----+
                     | supported  | supported  | supported  |
 +-------------------+------------+------------+------------+
 | unsynchronization |    true    |    true    |    true    |
 +-------------------+------------+------------+------------+
 |       compression |    true    |     -      |     -      |
 +-------------------+------------+------------+------------+
 |   extended header |     -      |    true    |    true    |
 +-------------------+------------+------------+------------+
 |      experimental |     -      |    true    |    true    |
 +-------------------+------------+------------+------------+
 |            footer |     -      |     -      |    true    |
 +-------------------+------------+------------+------------+


      
    If the flag byte's bit is set (1) it indicates usage of the associated flag.

 +---------------------------------------------------------------------------+
 |                                  flag byte                                |
 +---------------+-------------------+-------------------+-------------------+
 | ID3v2 version |       v2.0        |       v3.0        |        v4.0       |
 +---------------+---------+---------+---------+---------+----------+--------+
                           |                   |                    |
                 +---------+---------+---------+---------+----------+--------+
                 |        flag       |        flag       |        flag       |
 +---------------+-------------------+-------------------+-------------------+
 | bit a (bit 7) | unsynchronization | unsynchronization | unsynchronization |
 +---------------+-------------------+-------------------+-------------------+
 | bit b (bit 6) |    compression    |  extended header  |  extended header  |
 +---------------+-------------------+-------------------+-------------------+  
 | bit c (bit 5) |         -         |    experimental   |   experimental    |
 +---------------+-------------------+-------------------+-------------------+
 | bit d (bit 4) |         -         |         -         |       footer      |
 +---------------+-------------------+-------------------+-------------------+
 |       (bit 3) |         -         |         -         |          -        |
 +---------------+-------------------+-------------------+-------------------+
 |       (bit 2) |         -         |         -         |          -        |
 +---------------+-------------------+-------------------+-------------------+
 |       (bit 1) |         -         |         -         |          -        |
 +---------------+-------------------+-------------------+-------------------+
 |       (bit 0) |         -         |         -         |          -        |
 +---------------+-------------------+-------------------+-------------------+
 |  flag byte    |
 `---------------Â´






4.      ID3v2 tag body

    The ID3v2 tag body contains frames. Those frames in turn are split into
    a frame header and a frame body. The frame header contains information on
    how to parse the frame body, which encodings have been used etcetera.
    The frame body holds detailed encapsulated information about the MP3 file, 
    such as artist, title, copyright and many more.


5.      ID3v2 frames

    An ID3v2 frame can be split into a header and a body.

 +-----------------------------------------------------------------------------+
 |                                 ID3v2 frame                                 |
 +--------------------------------------+--------------------------------------+  
 |          ID3v2 frame header          |            ID3v2 frame body          |
 +--------------------------------------+--------------------------------------+

 
5.1     ID3v2 frame header

    identifier:
            The frame header holds identifier bytes, those bytes each hold a
            character that tells what type the frame is of (such as "TPE2",
            which is a text frame).
            For more detailed information go to <http://id3.org/>.
               
    size:
            The identifier bytes are followed by a size descriptor which has
            the size of the frame body encapsulated in it.

    flag:
            The size descriptor is followed (in ID3v2 v3.0 and later) by two 
            flag bytes. The first byte has frame status flags encapsulated, the 
            second byte has format flags encapsulated.
    

 +-----------------------------------------------------------------------------+
 |                              ID3v2 frame header                             |
 +------------+--------------------------+--------------------------+----------+
              |                          |                          |
            v2.0                       v3.0                       v4.0 
              |                          |                          |
  +-----[identifier]----+    +-----[identifier]----+    +-----[identifier]----+ 
  |       3 bytes       |    |       4 bytes       |    |       4 bytes       |
  +---------------------+    +---------------------+    +---------------------+
                                                                                
  +--------[size]-------+    +--------[size]-------+    +--------[size]-------+ 
  |       3 bytes       |    |       4 bytes       |    |       4 bytes       |
  +---------------------+    +---------------------+    +---------------------+
                                                                                
                             +--------[flag]-------+    +--------[flag]-------+
                             |       2 bytes       |    |       2 bytes       |
                             +---------------------+    +---------------------+
 
  -----------------------    -----------------------    ----------------------- 
                = 6 bytes                 = 10 bytes                 = 10 bytes



5.1.1   ID3v2 frame header flag bytes

    The byte pair holding the flag bits is only available in ID3v2 v2.3.0 or
    higher. In the following the v3.0 and v4.0 flag bytes are compared to each
    other:


    Lets assume the flags are written into a byte array named 'flags':
    
        flags[0]:
                The flag byte that has status flags encapsulated.
        
        flags[1]:
                The flag byte that has format flags encapsulated.
      

 +----------------------------------------------------------------------------+
 |                             status flag byte                               |
 +---------------+--------------------------------------------+---------------+
                 |                                            |             
               v3.0                                         v4.0
 |msb|           |                            |msb|           |
 +---+-----------+---------------+            +---+-----------+---------------+
 |             bits              |            |             bits              |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+
 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |-bit number-| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+
 | a | b | c | 0 | 0 | 0 | 0 | 0 |----flag----| 0 | a | b | c | 0 | 0 | 0 | 0 |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+

 +-------------+--------------------------------------------------------------+
 | status flag |                       description                            |
 +-------------+--------------------------------------------------------------+
 |      a      | Tag alter preservation                                       |
 |             | This flag tells the software what to do with this frame if   | 
 |             | it is unknown and the tag is altered in any way. This        |
 |             | applies to all kinds of alterations, including adding more   |
 |             | padding and reordering the frames.                           | 
 +----------------------------------------------------------------------------+
 |      b      | File alter preservation                                      |
 |             | This flag tells the software what to do with this frame if   |
 |             | it is unknown and the file, excluding the tag, is altered.   |
 |             | This does not apply when the audio is completely replaced    |
 |             | with other audio data.                                       |
 +-------------+--------------------------------------------------------------+
 |      c      | Read only                                                    |
 |             | This flag, if set, tells the software that the contents of   |
 |             | this frame is intended to be read only. Changing the         |
 |             | contents might break something, e.g. a signature. If the     |
 |             | contents are changed, without knowledge in why the frame was |
 |             | flagged read only and without taking the proper means to     |
 |             | compensate, e.g. recalculating the signature, the bit should |
 |             | be cleared.                                                  |
 +-------------+--------------------------------------------------------------+  





 +----------------------------------------------------------------------------+
 |                             format flag byte                               |
 +---------------+--------------------------------------------+---------------+
                 |                                            |             
               v3.0                                         v4.0
 |msb|           |                            |msb|           |
 +---+-----------+---------------+            +---+-----------+---------------+
 |             bits              |            |             bits              |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+
 | 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |-bit number-| 7 | 6 | 5 | 4 | 3 | 2 | 1 | 0 |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+
 | i | j | k | 0 | 0 | 0 | 0 | 0 |----flag----| 0 | h | 0 | 0 | k | m | n | p |
 +---+---+---+---+---+---+---+---+            +---+---+---+---+---+---+---+---+